#include <Bounce2.h>


#define RADIO_PIN 6
#define LIME_EN_PIN 2
#define RELAY_PIN 7


byte on[] = {0x11, 0x71, 0x00, 0x00, 0x9A, 0x60, 0x46, 0x43, 0x11, 0x12, 0x00, 0x00, 0x58, 0x5B, 0x46, 0x43, 0x11, 0x01, 0x00, 0x08, 0x4C, 0x49, 0x4D, 0x45, 0x42, 0x49, 0x4B, 0x45, 0xBE, 0x8A, 0x46, 0x43, 0x11, 0x01, 0x00, 0x08, 0x4C, 0x49, 0x4D, 0x45, 0x42, 0x49, 0x4B, 0x45, 0xBE, 0x8A, 0x46, 0x43, 0x11, 0x01, 0x00, 0x08, 0x4C, 0x49, 0x4D, 0x45, 0x42, 0x49, 0x4B, 0x45, 0xBE, 0x8A, 0x46, 0x43, 0x16, 0x11, 0x01, 0x02, 0x01, 0x11, 0x15, 0x5A, 0x46, 0x43, 0x16, 0x90, 0x00, 0x04, 0x01, 0x0F, 0x21, 0x00, 0xB4, 0x91, 0x46, 0x43, 0x16, 0x91, 0x00, 0x02, 0x00, 0x5A, 0xFD, 0x14, 0x46, 0x43, 0x16, 0xF1, 0x00, 0x02, 0x0E, 0x10, 0x2E, 0x49, 0x46, 0x43, 0x16, 0xF3, 0x00, 0x02, 0x09, 0x60, 0x8D, 0xCA, 0x46, 0x43, 0x16, 0x61, 0x00, 0x01, 0xF1, 0xF2, 0x8F, 0x46, 0x43, 0x16, 0x12, 0x00, 0x01, 0xF1, 0x2B, 0x26, 0x46, 0x43, 0x11, 0x01, 0x00, 0x16, 0x11, 0x01, 0x02, 0x01, 0x11, 0x15, 0x5A, 0x46, 0x43, 0x16, 0x90, 0x00, 0x04, 0x01, 0x0F, 0x21, 0x00, 0xB4, 0x91, 0x46, 0x43, 0x16, 0x91, 0x00, 0x02, 0x00, 0x5A, 0xFD, 0x14, 0x46, 0x43, 0x16, 0xF1, 0x00, 0x02, 0x0E, 0x10, 0x2E, 0x49, 0x46, 0x43, 0x16, 0xF3, 0x00, 0x02, 0x09, 0x60, 0x8D, 0xCA, 0x46, 0x43, 0x16, 0x61, 0x00, 0x01, 0xF1, 0xF2, 0x8F, 0x46, 0x43, 0x16, 0x12, 0x00, 0x01, 0xF1, 0x2B, 0x26, 0x46, 0x43, 0x11, 0x01, 0x00};
byte off[] = {0x08, 0x4C, 0x49, 0x4D, 0x45, 0x42, 0x49, 0x4B, 0x45, 0xBE, 0x8A, 0x46, 0x43, 0x16, 0x61, 0x00, 0x01, 0xF0, 0xE2, 0xAE, 0x46, 0x43, 0x16, 0x12, 0x00, 0x01, 0xF0, 0x3B, 0x07, 0x46, 0x43, 0x16, 0x12, 0x00, 0x01, 0xF0, 0x3B, 0x07, 0x46, 0x43, 0x16, 0x12, 0x00, 0x01, 0xF0, 0x3B, 0x07, 0x46, 0x43, 0x16, 0x12, 0x00, 0x01, 0xF0, 0x3B, 0x07, 0x46, 0x43, 0x11, 0x71, 0x00, 0x00, 0x9A, 0x60, 0x46, 0x43, 0x11, 0x12, 0x00, 0x00, 0x58, 0x5B, 0x46, 0x43, 0x11, 0x01, 0x00};

Bounce debouncer = Bounce();


void setup() {
  Serial.begin(9600);
  
  pinMode(RADIO_PIN, INPUT_PULLUP);
  debouncer.attach(RADIO_PIN, INPUT_PULLUP); // Attach the debouncer to a pin with INPUT_PULLUP mode
  debouncer.interval(8); // Use a debounce interval of 25 milliseconds

  pinMode(LED_BUILTIN, OUTPUT);
  pinMode(RELAY_PIN, OUTPUT);
  pinMode(LIME_EN_PIN, OUTPUT);
  digitalWrite(LIME_EN_PIN, HIGH);
  delay(500);

}

void loop() {
  if ( debouncer.fell() ) {
    digitalWrite(LED_BUILTIN, HIGH);
    Serial.write(on, sizeof(on));
    digitalWrite(RELAY_PIN, HIGH);
  }

  else if ( debouncer.rose() ) {
    digitalWrite(LED_BUILTIN, LOW);
    Serial.write(off, sizeof(off));
    digitalWrite(RELAY_PIN, LOW);
  }

  debouncer.update();
}
